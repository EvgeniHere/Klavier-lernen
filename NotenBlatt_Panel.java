import java.awt.BasicStroke;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.Ellipse2D;
import java.util.ArrayList;

/**
 *
 * @author Evgeni
 */
public class NotenBlatt_Panel extends javax.swing.JPanel {

    /**
     * Creates new form Notenblatt
     */
    
    int dist = 20;
    static ArrayList<Note> currentNoten = new ArrayList<>();
    
    public NotenBlatt_Panel() {
        initComponents();
    }
    
    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2 = (Graphics2D) g;
        g2.setStroke(new BasicStroke(2));
        for (int i = 0; i < 5; i++) {
            g.drawLine(0, i*dist + 30, this.getWidth(), i*dist + 30);
        }
        drawNoten(g2);
    }
    
    public void drawNoten(Graphics2D g2) {
        g2.setStroke(new BasicStroke(5));
        int vorzCount = 0;
        for (int i = 0; i < currentNoten.size(); i++) {
            g2.setStroke(new BasicStroke(5));
            int xPos = (int) ((double)(i + 0.5)*(double) (700/currentNoten.size())) + 30;
            int yPos = currentNoten.get(i).getLineNum()*(dist/2) + 2;
            
            g2.fill(new Ellipse2D.Double(xPos, yPos, 20, 15));
            
            if (currentNoten.get(i).getLineNum() > 6) {
                g2.drawLine(xPos + 15, yPos - 40, xPos + 15, yPos + 10);
            } else {
                g2.drawLine(xPos + 15, yPos + 50, xPos + 15, yPos + 10);
            }
            
            if (currentNoten.get(i).getPos().length() > 2) {
                g2.setStroke(new BasicStroke(2));
                g2.drawLine(10 + vorzCount*5 + 60, yPos+6, 20 + vorzCount*5 + 60, yPos-2);
                g2.drawLine(10 + vorzCount*5 + 60, yPos+14, 20 + vorzCount*5 + 60, yPos+6);
                g2.drawLine(12 + vorzCount*5 + 60, yPos-4, 12 + vorzCount*5 + 60, yPos+16);
                g2.drawLine(18 + vorzCount*5 + 60, yPos-4, 18 + vorzCount*5 + 60, yPos+16);
                vorzCount++;
            }
        }
        g2.drawImage(Keys_Holder.getKey().getImg(), Keys_Holder.getKey().x, Keys_Holder.getKey().y, Keys_Holder.getKey().width, Keys_Holder.getKey().height, null);
    }
    
    public void setNewNoten(ArrayList<Note> noten) {
        nextLevel();
        currentNoten = noten;
        repaint();
    }
    
    public void nextLevel() {
        currentNoten.clear();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}